#!/usr/bin/env python

"""
Command line tool to convert fits file to jpg file

Input: 1) input directory that contains .fits file
       2) output directory to store .jpg file

Example:
    fits2jpg /path/to/fits/files /path/to/store/jpg/files

by:
    Hong Chen
    Ken Hirata
    Katey Dong
"""

import os
import sys
import glob
from tqdm import tqdm
import warnings
import numpy as np
import datetime
from astropy.io import fits
import matplotlib.pyplot as plt


import ssfr


def process(fname,
        x_c=1501, # width , 3096, ascending order
        y_c=1141, # height, 2080, descending order
        y_half=939,
        x_half=939,
        crop=True,
        fdir_out=None,
        resolution='medium',
        ):

    filename = os.path.basename(fname)

    with fits.open(fname) as f:

        data = f[0].data.copy()
        x_max = f[0].header['X2']
        y_max = f[0].header['Y2']
        Nbit  = f[0].header['BITCAMPX']

    # arrange the array to (height[descending order], width[ascending order], channel)
    rgb = np.swapaxes(data[:, ::-1, :].T, 0, 1) / (2.0**Nbit)

    # crop the image
    #/----------------------------------------------------------------------------\#
    if crop:
        x_s = max([x_c - x_half, 0])
        x_e = min([x_c + x_half, x_max])
        y_s = max([y_c - y_half, 0])
        y_e = min([y_c + y_half, y_max])
        rgb = rgb[y_s:y_e, x_s:x_e, :]
    #\----------------------------------------------------------------------------/#

    if fdir_out is None:
        fdir_out = os.getcwd()
        msg = '\nWarning [fits2jpg]: <fdir_out> was not specified, outputting JPEG files to\n    <%s>' % (fdir_out)
        warnings.warn(msg)

    fname_jpg = os.path.join(fdir_out, filename.replace('.fits', '.jpg'))

    dpi = {
            'low'   : 100,
            'medium': 200,
            'high'  : 300,
            }

    plt.imsave(fname_jpg, rgb, format='jpg', dpi=dpi[resolution])


def main(fnames, fdir_out=None):

    for fname in tqdm(fnames):
        try:
            process(fname, fdir_out=fdir_out)
            msg = '\nMessage [fits2jpg]: <%s> has been converted to jpg --\n--> and saved at <%s>.' % (os.path.basename(fname), fdir_out)
        except Exception as error:
            msg = '\nError [fits2jpg]: <%s> failed in conversion --\n--> %s' % (fname, error)
        print(msg)


if __name__ == '__main__':

    fdir_inp = sys.argv[1]
    fdir_out = sys.argv[2]

    fdir_inp = os.path.abspath(fdir_inp)
    fdir_out = os.path.abspath(fdir_out)

    if os.path.exists(fdir_inp):
        fnames = ssfr.util.get_all_files(fdir_inp, pattern='*.fits')

        if (len(fnames) > 0) and (not os.path.exists(fdir_out)):
            os.makedirs(fdir_out)

        main(fnames, fdir_out=fdir_out)
    else:
        msg = '\nError [fits2jpg]: <%s> does not exist.'
        raise OSError(msg)
